!function(){var t={};window.omelet={salt:function(n,r){if(r){var e=r(t);n&&e&&(window.omelet[n]=e)}}}}(),function(){var t=function(t,n){var r=null,e=null,i=null;this.create=function(o,s,u){if(u){if(o=o||{},s=s||{},i&&i.forEach(function(n){return u[n]?void 0:void console.log("Entity missing required component: "+t+" needs "+n)}),r)for(var a in r){if(!s.hasOwnProperty(a))return void console.log("Entity missing needed reference: "+t+" references an entity for "+a+" needing a "+r[a]);if(!s[a][r[a]])return void console.log("Referenced entity missing needed component: "+t+" references an entity for "+a+" that needs a "+r[a])}if(e)for(var a in e)o.hasOwnProperty(a)||(o[a]=e[a]);return new n(o,s)}},this.references=function(t){return r=r||t,this},this.requires=function(t){return i=i||t,this},this.defaults=function(t){return e=e||t,this}};window.omelet.salt("egg",function(n){var r={};return n.eggs=r,function(n,e){if(n&&e){var i=new t(n,e);return r[n]=i,i}}})}(),function(){var t=function(t){var n=[];n.push(t[3]),n.push(-1*t[1]),n.push(-1*t[2]),n.push(t[0]),n.push(t[2]*t[5]-t[4]*t[3]),n.push(t[4]*t[2]-t[0]*t[5]);for(var r=t[0]*n[0]+t[2]*n[1],e=0;6>e;e+=1)n[e]/=r;return n},n=function(t,n,r){var e=r[0]*t+r[2]*n+r[4],i=r[1]*t+r[3]*n+r[5];return[e,i]},r=function(n,r,e){var i=t(e),o=i[0]*n+i[2]*r+i[4],s=i[1]*n+i[3]*r+i[5];return[o,s]},e=function(t,n,r,e){this.currentMatrix=t.slice(),this.context2d=n,this.parent=r?r.slice():null,this.rect=e};e.prototype.getContext=function(){return this.context2d.setTransform.apply(this.context2d,this.currentMatrix),this.context2d},e.prototype.getIdentityContext=function(){return this.context2d.setTransform(1,0,0,1,0,0),this.context2d},e.prototype.transformPoint=function(t,r){return n(t,r,this.currentMatrix)},e.prototype.inverseTransformPoint=function(t,n){return r(t,n,this.currentMatrix)},e.prototype.inverseTransformInParentSpace=function(t,n){return this.parent?r(t,n,this.parent):[t,n]},e.prototype.getRect=function(){return this.rect||[0,0,0,0]},window.omelet.salt(null,function(t){t.wrapContext=function(t){var i={matrix:[1,0,0,1,0,0],last:null,rect:null},o=function(t){var n=i.matrix.slice();i.matrix[0]=n[0]*t[0]+n[2]*t[1],i.matrix[1]=n[1]*t[0]+n[3]*t[1],i.matrix[2]=n[0]*t[2]+n[2]*t[3],i.matrix[3]=n[1]*t[2]+n[3]*t[3],i.matrix[4]=n[0]*t[4]+n[2]*t[5]+n[4],i.matrix[5]=n[1]*t[4]+n[3]*t[5]+n[5]};return{save:function(){var t=i.matrix.slice(),n=i.rect?i.rect.slice():null;i={matrix:t,last:i,rect:n}},restore:function(){i.last&&(i=i.last)},scale:function(t,n){o([t,0,0,n,0,0])},rotate:function(t){var n=Math.cos(t),r=Math.sin(t);o([n,r,-1*r,n,0,0])},translate:function(t,n){o([1,0,0,1,t,n])},shear:function(t,n){o([1,n,t,1,0,0])},transform:function(t,n,r,e,i,s){o([t,n,r,e,i,s])},setTransform:function(t,n,r,e,o,s){i.matrix=[t,n,r,e,o,s]},reset:function(){i={matrix:[1,0,0,1,0,0],last:null}},transformPoint:function(t,r){return n(t,r,i.matrix)},inverseTransformPoint:function(t,n){return r(t,n,i.matrix)},getSnapshot:function(){return new e(i.matrix,t,i.last?i.last.matrix:null,i.rect)},setRect:function(t){i.rect=t},getRect:function(t){return i.rect||[0,0,0,0]}}}})}(),omelet.egg("omelet.transform",function(t,n){this.x=t.x,this.y=t.y,this.angle=t.angle,this.update=function(t){}}).defaults({x:0,y:0,angle:0});